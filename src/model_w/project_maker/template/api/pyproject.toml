[tool.poetry]
name = "~~~project_name__snake~~~"
version = "0.1.0"
description = ""
authors = ["___dev_id___"]
license = "Proprietary"

packages = [
    {include = "___project_name__snake___"},
]

[tool.poetry.dependencies]
python = "~3.11"
modelw-preset-django = {extras = [
    "health",
    # :: IF api__celery
    "celery",
    # :: ENDIF
    # :: IF api__channels
    "channels",
    # :: ENDIF
    # :: IF api__wagtail
    "wagtail",
    # :: ENDIF
    # :: IF api__wsgi
    "gunicorn",
    # :: ENDIF
], version = ">=2024.10.0b1,<2024.11.0", allow-prereleases = true}
drf-spectacular = {extras = ["sidecar"], version = "*"}
# Health check modules
markdown = "*"
networkx = "*"


[tool.poetry.group.dev.dependencies]
black = "*"
isort = "*"
ipython = "*"

[tool.poetry.group.test.dependencies]
psutil = "*"
pytest = "*"
pytest-bdd = "*"
pytest-django = "*"
pytest-html = "*"
pytest-playwright = "*"
node-edge = {version = "*", allow-prereleases = true}
pyyaml = "*"

[tool.isort]
profile = "black"
known_first_party = "___project_name__snake___"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "___project_name__snake___.django.settings"
python_files = ["test_*.py", "*_test.py"]
django_debug_mode = "keep"
log_cli = true
log_file = "bdd/report/results/test.log"
addopts = ["--output", "bdd/report/results/media", "--screenshot", "on", "--video", "on", "--full-page-screenshot", "--cucumberjson=bdd/report/results/report.json", "--html=bdd/report/results/pytest.html"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
